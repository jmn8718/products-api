swagger: "2.0"
info:
  version: "0.0.1"
  title: Products API
# during dev, should point to your local machine
host: localhost:5000
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

paths:
  /authenticate:
    x-swagger-router-controller: auth
    post:
      description: Authenticate a user in the system
      operationId: authenticate
      parameters:
        - name: data
          in: body
          description: The user data
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthorizationBody"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthorizationResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products:
    x-swagger-router-controller: products
    get:
      security:
        - Bearer: []
      description: Return 'Products'
      operationId: getProducts
      parameters:
        - name: search
          in: query
          description: The search value to filter products
          required: false
          type: string
        - name: limit
          in: query
          description: The limit of products to display
          required: false
          type: number
        - name: skip
          in: query
          description: The elements to skip in the query
          required: false
          type: number
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - Bearer: []
      description: Create a 'Product'
      operationId: createProduct
      parameters:
        - name: data
          in: body
          description: The data of the product
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Product"
      responses:
        "201":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products/{productId}:
    x-swagger-router-controller: products
    get:
      security:
        - Bearer: []
      description: Get a 'Product'
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          description: The id of the products
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - Bearer: []
      description: Update a 'Product'
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          description: The id of the products
          required: true
          type: number
        - name: data
          in: body
          description: The data of the product
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Product"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - Bearer: []
      description: Delete a 'Product'
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: The id of the products
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ProductResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# Security definitions
securityDefinitions:
  Bearer:
    type: apiKey
    name: authorization
    in: header
# complex objects have schema definitions
definitions:
  AuthorizationBody:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  AuthorizationResponse:
    required:
      - token
    properties:
      token:
        type: string
  Product:
    required:
      - name
      - ean
      - brand
      - model
    properties:
      name:
        type: string
      ean:
        type: string
      brand:
        type: string
      model:
        type: string
  ProductResponse:
    required:
      - id
    properties:
      id:
        type: number
      name:
        type: string
      ean:
        type: string
      brand:
        type: string
      model:
        type: string
  ProductsResponse:
    required:
      - count
      - data
    properties:
      count:
        type: number
      data:
        type: array
        items:
          type: object
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
